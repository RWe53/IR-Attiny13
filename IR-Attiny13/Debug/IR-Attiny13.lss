
IR-Attiny13.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000044  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  00000044  000000b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000000ba  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000000ec  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  00000128  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000003df  00000000  00000000  00000168  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000002f1  00000000  00000000  00000547  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000157  00000000  00000000  00000838  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00000990  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000026b  00000000  00000000  000009b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  00000c1f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	09 c0       	rjmp	.+18     	; 0x14 <__ctors_end>
   2:	0e c0       	rjmp	.+28     	; 0x20 <__bad_interrupt>
   4:	0d c0       	rjmp	.+26     	; 0x20 <__bad_interrupt>
   6:	0c c0       	rjmp	.+24     	; 0x20 <__bad_interrupt>
   8:	0b c0       	rjmp	.+22     	; 0x20 <__bad_interrupt>
   a:	0a c0       	rjmp	.+20     	; 0x20 <__bad_interrupt>
   c:	09 c0       	rjmp	.+18     	; 0x20 <__bad_interrupt>
   e:	09 c0       	rjmp	.+18     	; 0x22 <__vector_7>
  10:	07 c0       	rjmp	.+14     	; 0x20 <__bad_interrupt>
  12:	06 c0       	rjmp	.+12     	; 0x20 <__bad_interrupt>

00000014 <__ctors_end>:
  14:	11 24       	eor	r1, r1
  16:	1f be       	out	0x3f, r1	; 63
  18:	cf e9       	ldi	r28, 0x9F	; 159
  1a:	cd bf       	out	0x3d, r28	; 61
  1c:	10 d0       	rcall	.+32     	; 0x3e <main>
  1e:	10 c0       	rjmp	.+32     	; 0x40 <_exit>

00000020 <__bad_interrupt>:
  20:	ef cf       	rjmp	.-34     	; 0x0 <__vectors>

00000022 <__vector_7>:

						.text

   .global TIM0_COMPB_vect
TIM0_COMPB_vect:
            _IrqBegin           
  22:	1f 92       	push	r1
  24:	0f 92       	push	r0
  26:	0f b6       	in	r0, 0x3f	; 63
  28:	0f 92       	push	r0
            lds   r0,TIM0_COMPA
  2a:	00 90 60 00 	lds	r0, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
            inc   r0
  2e:	03 94       	inc	r0
            sts   TIM0_COMPA,r0           
  30:	00 92 60 00 	sts	0x0060, r0	; 0x800060 <__DATA_REGION_ORIGIN__>
  34:	0f 90       	pop	r0
  36:	0f be       	out	0x3f, r0	; 63
  38:	0f 90       	pop	r0
  3a:	1f 90       	pop	r1
  3c:	18 95       	reti

0000003e <main>:

#include <avr/io.h>


int main(void)
{
  3e:	ff cf       	rjmp	.-2      	; 0x3e <main>

00000040 <_exit>:
  40:	f8 94       	cli

00000042 <__stop_program>:
  42:	ff cf       	rjmp	.-2      	; 0x42 <__stop_program>
